jobs:
  build-and-push-image:
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout PR
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Setup jdk
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - continue-on-error: true
      env:
        NETFLIX_OSS_REPO_PASSWORD: ${{ secrets.ORG_NETFLIXOSS_PASSWORD }}
        NETFLIX_OSS_REPO_USERNAME: ${{ secrets.ORG_NETFLIXOSS_USERNAME }}
        NETFLIX_OSS_SIGNING_KEY: ${{ secrets.ORG_SIGNING_KEY }}
        NETFLIX_OSS_SIGNING_PASSWORD: ${{ secrets.ORG_SIGNING_PASSWORD }}
      name: Generate dockerfiles
      uses: gradle/gradle-build-action@v2
      with:
        arguments: --info --stacktrace ${{ matrix.target }}:dockerCreateDockerfile
    - continue-on-error: true
      name: Fetch tags
      run: 'git fetch --prune --unshallow --tags

        '
    - continue-on-error: true
      id: login-docker-hub
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.ORG_NETFLIXOSS_DOCKERHUB_PASSWORD }}
        username: ${{ secrets.ORG_NETFLIXOSS_DOCKERHUB_USERNAME }}
    - continue-on-error: true
      id: meta
      name: Docker meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ matrix.image }}
        tags: 'type=ref,event=branch

          type=ref,event=pr

          type=semver,pattern={{version}}

          type=semver,pattern={{major}}.{{minor}}

          type=raw,value=latest,enable=${{ github.event_name == ''release'' }}

          '
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - continue-on-error: true
      name: Cache Docker layers
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        path: /tmp/.buildx-cache
        restore-keys: '${{ runner.os }}-buildx-

          '
    - continue-on-error: true
      name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        context: ${{ matrix.workingDirectory }}
        file: ${{ matrix.dockerfile }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        push: false
        tags: ${{ steps.meta.outputs.tags }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - dockerfile: ./mantis-control-plane/mantis-control-plane-server/build/docker/Dockerfile
          image: netflixoss/mantiscontrolplaneserver
          target: mantis-control-plane:mantis-control-plane-server
          workingDirectory: ./mantis-control-plane/mantis-control-plane-server/build/docker
        - dockerfile: ./mantis-server/mantis-server-agent/build/docker/Dockerfile
          image: netflixoss/mantisagent
          target: mantis-server:mantis-server-agent
          workingDirectory: ./mantis-server/mantis-server-agent/build/docker
        - dockerfile: ./mantis-examples/mantis-examples-mantis-publish-sample/build/docker/Dockerfile
          image: netflixoss/mantis-publisher-sample
          target: mantis-examples:mantis-examples-mantis-publish-sample
          workingDirectory: ./mantis-examples/mantis-examples-mantis-publish-sample/build/docker
name: Publish Docker images to Docker Registry
on:
  repository_dispatch:
    types: trigger-ga___push-docker-image.yml
